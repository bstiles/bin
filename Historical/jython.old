#!/bin/bash
. "$(dirname "$0")"/init.sh

source_rc()
{
    found_one=false

    rc=$1
    start=${PWD}

    until [ "${PWD}" = "/" ]; do
	pushd .. > /dev/null
    done

    until [ "${PWD}" = "${start}" ]; do
	popd > /dev/null
	if [ -e ${rc} ]; then
	    source ${rc}
#	    echo using ${PWD}/${rc} >&2
	    found_one=true
	fi
    done

    if [ ${found_one} = false ]; then
	pushd ${HOME} > /dev/null
	if [ -e ${rc} ]; then
	    source ${rc}
#	    echo using ${PWD}/${rc} >&2
	    found_one=true
	fi
	popd > /dev/null
    fi

}

source_rc jythonrc

if [ -z "${JAVA_HOME}" ]; then
    export JAVA_HOME=$(java5home.sh)
fi
if [ -z "${JYTHON_HOME}" ]; then
    JYTHON_HOME="$(dirname "$0")"/jythonRelease_2_2alpha1
fi
if [ -z "${JYTHON_JAR}" ]; then
    JYTHON_JAR=jython.jar
fi
CP="${JYTHON_HOME}/${JYTHON_JAR}"
if [ -z "${CLASSPATH}" ]; then
    if [ -z "${JYTHON_LIBS}" ]; then
        export JYTHON_LIBS="${HOME}/jython_libs"
    fi
    if [ -z "${JYTHON_RESOURCES}" ]; then
        export JYTHON_RESOURCES="${HOME}/jython_resources"
    fi
    libs=$(ls -1 ${JYTHON_LIBS}/*.jar  ${JYTHON_LIBS}/*.zip 2>/dev/null | xargs echo | sed -e 's/ /:/g')
    CP="${CP}:${JYTHON_RESOURCES}"
    if [ ! -z ${libs} ]; then
        CP=${CP}:${libs}
    fi
else
    CP=${CP}:${CLASSPATH}
fi
PYTHONPATH_ARG=
if [ -n ${PYTHONPATH} ]; then
    PYTHONPATH_ARG="-Dpython.path=${PYTHONPATH}"
fi

exec ${JAVA_HOME}/bin/java ${JAVA_OPTS} -Dpython.home="${JYTHON_HOME}" "${PYTHONPATH_ARG}" -classpath "${CP}" org.python.util.jython "$@"
