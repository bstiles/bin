#!/usr/bin/env bash
set -o errexit -o pipefail -o nounset
shopt -s extglob
unset CDPATH

declare -ir ERR_GENERAL=1
declare -ir ERR_BAD_CMD_LINE=113
declare -ir ERR_PRECONDITION_VIOLATED=112
declare -ir ERR_MAX_LINK_DEPTH_EXCEEDED=111
declare -ir ERR_CMD_NOT_FOUND=110
declare -ir ERR_NON_EXISTENT_DIR=109
# Use 64-108 for other exit codes.

declare -r here=$(cd -- "${BASH_SOURCE[0]%/*}" && pwd)

display_help() {
cat <<EOF
usage: ${0##*/} [opts] [file]

-h|--help        Displays usage information.

Proxy command to use Emacs as the Info reader from the command prompt.
EOF
}
require() {
    eval [[ \$\{${1:?require was called without arguments!}-\} ]] \
         '||' abort \$ERR_BAD_CMD_LINE \$\{2-\$1 is required!\} \$\{*:3\}
}
abort() {
    local -i err_code=${1:?abort called without err_code}
    (( err_code == ERR_BAD_CMD_LINE )) && {
        display_help; echo; echo "-- ABORTED:"
    }
    shift; (( $# > 0 )) && echo "$*" >&2
    exit $err_code
}

# Handle help
[[ ${1-} == @(--help|-h) ]] && { display_help; exit 0; }

script="
(condition-case nil
    (info ${1+"\"$1\""})
  (error
    (Info-directory)
    (run-at-time \"0.5 sec\" nil
      (lambda () (message \"Could not find Info file for ${1-}.\")))))
"
emacsclient -t --eval "$script"
