#!/bin/bash
shopt -s extglob
set -o errexit
set -o nounset

here=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)
DOCKER=docker
COMPOSE=docker-compose
MACHINE=docker-machine

function abort {
    [ $# -gt 0 ] && echo "$*"
    exit 1
}

function display_help {
cat <<EOF
usage: $(basename "$0") MACHINE DOCKER-COMMAND [args...]

  -h|--help|help  Display full docker help.

Wraps docker to insert machine config parameters into the call in the
form 'docker \$($MACHINE config MACHINE) DOCKER-COMMAND args...'.

Use '.' to refer to the active Docker machine as reported by
'$MACHINE active'.
EOF
}

function abort_and_display_help {
    display_help && echo
    echo "-- ABORTED:"
    abort "$@"
}

[[ $# -eq 0 ]] && display_help && exit 2
[[ ${1:-} = @(--help|-h) ]] && exec "$DOCKER" --help

machine=${1:-}
[[ $machine = . ]] && machine=$("$MACHINE" active)
shift

# If we see --help|-h anywhere, defer to the real docker.
for x in "${1:-}" "${2:-}" "${3:-}" "${4:-}"; do
    [[ $x = @(--help|-h) ]] && {
        if [[ $1 = compose ]]; then
            exec "$COMPOSE" "${@:2}"
        else
            exec "$DOCKER" "$@"
        fi
    }
done

[[ ${1:-} = compose ]] && cmd=env || cmd=config
config=$("$MACHINE" $cmd $machine) \
    || abort_and_display_help "MACHINE=${machine:-'""'} seems to be invalid."
if [[ ${1:-} = compose ]]; then
    shift
    eval "$config"
    "$COMPOSE" "$@"
else
    "$DOCKER" $config "$@"
fi

